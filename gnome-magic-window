#!/bin/sh
# Copyright 2017 Adrien VergÃ©

set -eu

function usage() {
  echo "usage: $0 WINDOW-NAME" >&2
  echo "  Where WINDOW-NAME is a string to identify" >&2
  echo "  the program to bring to front. Examples:" >&2
  echo "  'terminator', 'terminal', 'chromium'..." >&2
  echo "  Use --list to list available window names." >&2
  exit 1
}

function fail() {
  echo "$1" >&2
  exit 1
}

function gnome_looking_glass() {
  local ret
  ret="$(gdbus call --session --dest org.gnome.Shell \
         --object-path /org/gnome/Shell \
         --method org.gnome.Shell.Eval "$1")"
  [ "${ret:0:8}" = "(true, '" ] \
    || fail "bad output from Gnome looking glass: $ret"
  [ -n "${ret:8:-2}" ] && echo "${ret:8:-2}"
}

function get_active_windows() {
  gnome_looking_glass "
    global.get_window_actors().map(
      w => [w.toString(), w.get_meta_window().get_wm_class()]);
  " | sed 's/\],\[/],\n [/g'
}

function get_active_window_id() {
  gnome_looking_glass "global.get_window_actors().slice(-1)[0].toString();"
}

function set_active_window() {
  local id="$1"
  gnome_looking_glass "
    const Main = imports.ui.main;
    const window = global.get_window_actors()
                   .filter(w => w.toString() === $id)[0];
    if (window) {
      Main.activateWindow(window.get_meta_window());
    }
  "
}

function find_magic_window_id() {
  local search_term="$1"
  gnome_looking_glass "
    const window = global.get_window_actors()
                   .filter(w => w.get_meta_window()
                   .get_wm_class().toLowerCase()
                   .contains('$search_term'.toLowerCase()))[0];
    if (window)
      window.toString();
  "
}

[ $# -eq 1 ] || usage

if [ "$1" = "--list" ]; then
  get_active_windows

elif [ "${1:0:1}" = "-" ]; then
  usage

else
  WINDOW="$1"

  COOKIE=/tmp/gnome-magic-window-$(id -u)
  if [ ! -e "$COOKIE" ]; then
    tmp=$(mktemp)  # use mktemp to have secure rights on the file
    mv "$tmp" "$COOKIE"
  fi

  current=$(get_active_window_id)
  magic=$(find_magic_window_id "$WINDOW")
  last_not_magic=$(cat "$COOKIE")

  if [ "$current" != "$magic" ]; then
    set_active_window "$magic"
    echo "$current" >"$COOKIE"
  elif [ -n "$last_not_magic" ]; then
    set_active_window "$last_not_magic"
  fi
fi
